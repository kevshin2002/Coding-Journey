Header and Nav:
There exists semantic elements that assist in the structure of a web page. 
A <header> is a container usually for either navigational links or indtroductory content containing <h1> to <h6> headings.
Example:
<header>
	<h1>
		Everything you need to know about pizza!
	</h1>
</header>

Comparison to <div> tag

<div id = "header">
	<h1>
		Everything you need to know about pizza!
	</h1>
</div>

By using a <header> tag, our code becomes easier to read. It's much easier to identify what's inside of the <h1> parent tags as opposed to a <div> tag which provide no details as to what's inside of the tag.
A <nav> is used to define a block of navigationa links such as menus and table of contents.
It's important to note that the <nav> can be used inside of the <header> element but can also be used on it's own.
Example:
<header>
	<nav>
		<ul>
			<li><a href = "#home">Home</a></li>
			<li><a href = "#about">About</a></li>
		</ul>
	</nav>
</header>

By using <nav> as a way to label our navigation links, it's easier for web browsers and screen readers to read the code.

Main and Footer:
Two more structural elements are <main> and <footer>.
These elements along with <nav> and <header> help describe where an element is located based on conventional web development standards.
The element <main> is used to encapsulate the dominant content within a webpage. 
This tag is separate from the <footer> and the <nav> of a webpage since these elements don't contain the principal content.

By using <main> instead of <div>, screen readers and web browsers are better able to identify that whatever is inside the tag is the bulk of the content.
Example:
<main>
	<header>
		<h1>Type of Sports</h1>
	</header>
	
	<article>
		<h3>Baseball</h3>
		<p>
			The first game of baseball was played in Cooperstown, New York in the summer of 1839.
		</p>
	</article>
</main>

As shown above, <main> contains an <article> and <header> tag with child elements that hold the most important information related to the page.

The content at the bottom of the subject information is known as the footer, indicated by the <footer> element.
The footer contains information such as:
Contact Information
Copyright Information
Terms of Use
Site Map
Reference to Top of Page Links.

Example:
<footer>
	<p>Email me at Codey@Codecademy.com</p>
</footer>

In the example above, the footer is used to contain contact information.
The <footer> tag is separate from the <main> element and typically located at the bottom of the content.

Article and Section:
Focusing on what can go in the body, we'll look at <section> and <article>

<section> defines elements in a document, such as chapters, headings, or any other area of the document with the same theme.
For example, content with the same theme such as articles about cricket can go under a single <section>
A website's home page could be split into sections for the introduction, news items, and contact information.
Example:
<section>
	<h2>Fun Facts about Cricket</h2>
</section>


The <section> element encapsulates the code.

The <article> element holds content that makes sense on its own. 
<article> can hold content such as articles, blogs, comments, magazines, etc.
An <article> tag would help someone using a screen reader understand where the article content (that might contain a combination of text, images, audio, etc) begins and ends.
Example:
<section>
	<h2>Fun Facts About Cricket</h2>
	<article>
		<p>A single match of cricket can last up to 5 days.</p>
	</article>
</section>

The code above has <article> element containing a fact about cricket inside of the <section> element.
It's important to note that a <section> element could also be placed in an <article> element depending on the context.

Aside Element:
The <aside> element is used to mark additional information that can enhance another element but isn't required in order to understand the main content.
This element can be used alongside other elements such as <article> or <section>
Some common uses of the <aside> element are for:
Bibliographies
Endnotes
Comments
Pull Quotes
Editorial sidebars
Additional information

Example:
<article>
	<p>The first World Series was played between Pittsburgh and Boston in 1903 and was a nine-game series.</p>
</article>
<aside>
	<p>
	 Babe Ruth once stated, "Heroes get remembered, but legends never die."
	</p>
</aside>

As shown above, the information within the <article> is the important content meanwhile the information within the <aside> enhances the information in <article> but isn't required to understandi t,

Figure and Figcaption:
We can do the same with images using <figure> and <figcaption>
<figure> is an element used to encapsulate media such as an image, illustration, diagram, code snippet, etc, which is referenced in the main flow of the document.
Example:

<figure>
	<img src = "overwatch.jpg">
</figure>

In the code, we created a <figure> element so that we can encapsulate our <img> tag.
In <figure> we used the <img> tag to insert an image onto the webpage.
We used the src attribute within the <img> tag so that we can link the source of the image.

It's possible to add a caption to the image by using the <figcaption..

<figcaption> is an element used to describe the media in the <figure> tag.
Usually, <figcaption> will go inside <figure>.
This is different than using a <p> element to describe the content.
If we decide to change the location of <figure>, the paragraph tag may get displaced from the figure while a <figcaption> will move with the figure.
This is useful for grouping an image with a caption.

Example:
<figure>
	<img src = "overwatch.jpg">
	<figcaption>This picture shows characters from Overwatch.</figcaption.
</figure>

The <figcaption> above describes the image in <figure>.
This helps group the <figure> content with the <figcaption> content.

While the content in <figure> is related to the main flow of the document, the position is independent.
This means that we can remove it or move it somewhere else without affecting the flow of the document.

Note:
figcaption is a caption for all users, not just blind.
alt is to help visually impaired users.

Audio and Attributes:
The <audio> element is used to embed audio content into a document.
Like <video>, <audio> uses src to link the audio source.
Example:
<audio>
	<source src = "iAmAnAudioFile.mp3" type = "audio/mp3">
</audio>

In this example, we created an <audio> element then a <source> element eo encapsulate our audio link.
We then specified the type by using type and named what kind of audio it is.
Although not necessary always, it's recommended that we state the type of audio as it helps the browser identify it more easily and deteremine if that type of audio is supported by the browser.

To give control to the audio file, we need the attribute.
Attributes provide additional information about an element.
Attributes allow us to do many different things to our audio file.
There are many attributes for <audio> but will focus on controls and src in this element.
controls : automatically displays the audio controls into the browser such as play and mute.
src : specifies the URL of the audio file

Most attributes go in the opening tag of <audio>
Example:
<audio autoplay controls>

Video and Embed:
By using a <video> element, we can add videos to our website.
The <video> element makes it clear that a developer is attempting to display a video to the user.
Some attributes that can alter a video playback include:
controls: when added, a play/pause button will be added onto the video along with volume control and a fullscreen option.
autoplay: The attribute which results in a video automatically playing as soon as the page is loaded.
loop: this attibute results in the video continuously playing on repeat.

Example:
<video src = "coding.mp4" controls>Video not supported</video>

The example above has coding.mp4 being played. The video not supported will only show up if the browser is unable to display the video.

Another tag that can be used to incorporate media content into a page is the <embed> tag, which can embed any media content including videos, audio files, and gifs from an external source.
This means that websites that have an embed button have some form of media content that can be added to other websites.
The <embed> tag is a self closing tag, unlike the <video> element.
Note that <embed> is a deprecated tag and other altneratives such as <video>, <audio> and <img>, should be used in its place.
It's only being taught for legacy purposes.

Example:
<embed src = "download.gif"/>

The example above adds a gif from a local file known as download.gif.
Embed can be used to add local files as well as media content straight from some other websites.

Review:
Semantic HTML introduces meaning to a apge through specific elements that provide context as to what is in between the tags.
Semantic HTML is a modern standard and makes a website accessible for people who use screen readers to translate the webpage and improves our website's SEO
<header>, <nav>, <main> and <footer> create the basic structure of the webpage.
<section> defines elements in a document, such as chapters, headings, or any other area of the document with the same theme.
<article> holds content that makes sense on its own such as articles, blogs, comments, etc.
<aside> contains information that is related to the main content, but not required in order to understand the dominant information.
<figure> encapsulates all types of media.
<figcaption> is used to describe the media in <figure>
<video>, <embed>, and <audio> elements are used for media files.
